#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è Fragment API –∏ cookies
"""
import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

from services.fragment_service import FragmentService
from services.fragment_cookie_manager import FragmentCookieManager


async def check_fragment_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è Fragment API"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è Fragment API...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å
        fragment_service = FragmentService()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º ping
        print("\nüì° –ü—Ä–æ–≤–µ—Ä–∫–∞ ping...")
        ping_result = await fragment_service.ping()
        if ping_result["status"] == "success":
            print("   ‚úÖ Fragment API –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print(f"   ‚ùå Fragment API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {ping_result.get('error', 'Unknown error')}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º seed phrase
        print("\nüîê –ü—Ä–æ–≤–µ—Ä–∫–∞ seed phrase...")
        if fragment_service.seed_phrase:
            # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞
            words = fragment_service.seed_phrase.strip().split()
            if len(words) == 24:
                print("   ‚úÖ Seed phrase –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞ (24 —Å–ª–æ–≤–∞)")
            else:
                print(f"   ‚ö†Ô∏è  Seed phrase –∏–º–µ–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ({len(words)} —Å–ª–æ–≤)")
        else:
            print("   ‚ùå Seed phrase –Ω–µ –∑–∞–¥–∞–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º cookies
        print("\nüç™ –ü—Ä–æ–≤–µ—Ä–∫–∞ cookies...")
        if fragment_service.fragment_cookies:
            print("   ‚úÖ Cookies –∑–∞–¥–∞–Ω—ã")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ –º–µ–Ω–µ–¥–∂–µ—Ä
            cookie_manager = FragmentCookieManager(fragment_service)
            expired = await cookie_manager._are_cookies_expired(fragment_service.fragment_cookies)
            if not expired:
                print("   ‚úÖ Cookies –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã")
            else:
                print("   ‚ö†Ô∏è  Cookies –∏—Å—Ç–µ–∫–ª–∏")
        else:
            print("   ‚ùå Cookies –Ω–µ –∑–∞–¥–∞–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ)
        print("\nüí∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞...")
        if fragment_service.seed_phrase and len(fragment_service.seed_phrase.strip().split()) == 24:
            balance_result = await fragment_service.get_balance()
            if balance_result["status"] == "success":
                balance_data = balance_result.get("result", {})
                print(f"   ‚úÖ –ë–∞–ª–∞–Ω—Å: {balance_data.get('balance', 'N/A')} {balance_data.get('currency', 'TON')}")
            else:
                print(f"   ‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –±–∞–ª–∞–Ω—Å: {balance_result.get('error', 'Unknown error')}")
        else:
            print("   ‚ö†Ô∏è  –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å –±–µ–∑ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π seed phrase")
        
        print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ Fragment API: {e}")
        return False
    
    return True


if __name__ == "__main__":
    import asyncio
    asyncio.run(check_fragment_status())